/* 
PROJECT OBJECTIVES

1. Generate a new function that outputs a single special charachter. The rationale for this
update is most systems require a security password containing at least one special charachter !

2. Incorporate Java-Script SWITCH STATEMENT into code enabling more control on sequence/output 
(password) length ! 

The switch statement is a useful & alternative way of coding a complicated if/else statement
in Java-Script when we want to compare one value to multiple differing options. Indentation is
of high importance when coding a swotch statement!
*/

// FUNCTIONS REQUIRED FOR PROJECT (NEW UPDATE)
//Random Number Generator Function x1
const randomNumberGeneration = function (x) {
  //returns a random number between 0 & (x - 1)
  return Math.floor(Math.random() * x);
};
//Random Letter Upper/Lower Case Generator Functions x2 & x3
function randomUpperCaseLetterGenerator() {
  const upperCase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  //Returns a random Cap letter (filtered from the above string)
  return upperCase[Math.floor(Math.random() * upperCase.length)];
}
function randomLowerCaseLetterGenerator() {
  const lowerCase = "abcdefghijklmnopqrstuvwxyz";
  //returns a random lower-case Letter (filtered from the above string)
  return lowerCase[Math.floor(Math.random() * lowerCase.length)];
}
//Single Randomized Special Charachter Function x4 (New Function!)
function randomizedSpecialCharachter() {
  const charachtersSpecial = `!Â£$%&*@~`;
  //return a random special charachter (filtered from the above string)
  return charachtersSpecial[
    Math.floor(Math.random() * charachtersSpecial.length)
  ];
}
//Array Randomizer Function x5
function randomArray(array) {
  //initiate variable = array length .. (number)
  let arrayLength = array.length;
  //initiate while loop (condition/expression)condition = while zero is NOT equal to array length ! expression >
  while (0 != arrayLength) {
    // generates random num between 0 - (arrayLength - 1) on each iteration
    let randomnum = Math.floor(Math.random() * arrayLength);
    //-= operator subtracts two values and assigns the resulting value to a variable
    arrayLength -= 1;
    //swap with current element
    let arrayindex = array[arrayLength]; // >> indexing last element & assigning to new variable
    array[arrayLength] = array[randomnum];
    array[randomnum] = arrayindex;
  }
  return array;
}

//NEWLY UPDATED SECURITY/PASSWORD GENERATOR
//Security/Code Generation will have an output off at least 9 charachters. Still in development
//to have more control on output length. As menioned above we will be utilzing the
//switch-statement for this action.
const securityCodeGenerator1 = function (n1, n2, n3, n4, n5) {
  //Call Random Number Generator x 5
  const d1 = randomNumberGeneration(n1);
  const d2 = randomNumberGeneration(n2);
  const d3 = randomNumberGeneration(n3);
  const d4 = randomNumberGeneration(n4);
  const d5 = randomNumberGeneration(n5);
  console.log(`Digit 1 ${d1}`);
  console.log(`Digit 2 ${d2}`);
  console.log(`Digit 3 ${d3}`);
  console.log(`Digit 4 ${d4}`);
  console.log(`Digit 5 ${d5}`);
  //Confirm Random Numbers Generated by printing the below output to the developer console !
  console.log(`Random Digit Generation Completed Succesfully`);
  //Call Random UPPER-CASE Letter Generator !
  const L11 = randomUpperCaseLetterGenerator();
  console.log(`Letter 1 ${L11}`);
  console.log(`Random UPPER - CASE Letter generation completed succesfully`);
  //Call Random lower-case Letter Generator !
  const L22 = randomLowerCaseLetterGenerator();
  console.log(`Letter 2 ${L22}`);
  console.log(`Random lower-case Letter generation completed succesfully`);
  //Call Random UPPER-CASE Letter Generator !
  const L33 = randomUpperCaseLetterGenerator();
  console.log(`Letter 3 ${L33}`);
  console.log(`Random UPPER - CASE Letter generation completed succesfully`);
  //Call Random Special Charachter Function
  const charachter = randomizedSpecialCharachter();
  console.log(`Special Charachter 1 ${charachter}`);
  console.log("Random special charachter generation completed succesfully");
  //Initiate new array / explicit (manual) type conversion for specific sequential output
  newArray = [
    String(d1) +
      String(d2) +
      String(L22) +
      String(d3) +
      String(L33) +
      String(d4) +
      String(charachter) +
      String(d5) +
      String(L11),
  ];
  //Call randomArray function (randomize items in array) on the newly generated array !
  Randomised = randomArray(newArray);
  //return the randomized array to the function
  return Randomised;
};
//Testing Newly Updated Security Code Generator | Developers Console
const newCode1 = securityCodeGenerator1(10, 20, 30, 40, 50);
console.log(`Updated Security Code/Password 1 : ${newCode1}`);

//NEWLY UPDATED SECURITY/PASSWORD GENERATOR
// Cleaning the Back-End for Developer Console Output
const securityCodeGenerator2 = function (n1, n2, n3, n4, n5) {
  //Call Random Number Generator x 5
  const d1 = randomNumberGeneration(n1);
  const d2 = randomNumberGeneration(n2);
  const d3 = randomNumberGeneration(n3);
  const d4 = randomNumberGeneration(n4);
  const d5 = randomNumberGeneration(n5);
  //Call Random UPPER-lower-CASE Letter Generator !
  const L11 = randomUpperCaseLetterGenerator();
  const L22 = randomLowerCaseLetterGenerator();
  const L33 = randomUpperCaseLetterGenerator();
  //Call Random Special Charachter Function
  const charachter = randomizedSpecialCharachter();
  //Initiate new array / explicit (manual) type conversion for specific sequential output
  newArray = [
    String(d1) +
      String(d2) +
      String(L22) +
      String(d3) +
      String(L33) +
      String(d4) +
      String(charachter) +
      String(d5) +
      String(L11),
  ];
  //Call randomArray function (randomize items in array) on the newly generated array !
  Randomised = randomArray(newArray);
  //return the randomized array to the function
  return Randomised;
};
//Testing Newly Updated Security Code Generator | Developers Console
const newCode2 = securityCodeGenerator2(10, 20, 30, 40, 50);
console.log(`Updated Security Code/Password 2 : ${newCode2}`);

//SWITCH STATEMENT
//Below variable = user-desired length for security/password output
const code = "12";
//Inititiate Switch - Statement
switch (code) {
  case "12":
    //x 12 charachters
    const securityCodeGenerator12 = function (n1, n2, n3, n4, n5, n6, n7) {
      //Call Random Number Generator x 5
      const d1 = randomNumberGeneration(n1);
      const d2 = randomNumberGeneration(n2);
      const d3 = randomNumberGeneration(n3);
      const d4 = randomNumberGeneration(n4);
      const d5 = randomNumberGeneration(n5);
      const d6 = randomNumberGeneration(n6);
      const d7 = randomNumberGeneration(n7);
      //Call Random UPPER-lower-CASE Letter Generator !
      const L11 = randomUpperCaseLetterGenerator();
      const L22 = randomLowerCaseLetterGenerator();
      const L33 = randomUpperCaseLetterGenerator();
      //Call Random Special Charachter Function
      const charachter1 = randomizedSpecialCharachter();
      const charachter2 = randomizedSpecialCharachter();
      //Initiate new array / explicit (manual) type conversion for specific sequential output
      newArray = [
        String(d1) +
          String(d2) +
          String(L22) +
          String(d3) +
          String(L33) +
          String(d6) +
          String(charachter2) +
          String(d4) +
          String(charachter1) +
          String(d5) +
          String(d7) +
          String(L11),
      ];
      //Call randomArray function (randomize items in array) on the newly generated array !
      Randomised = randomArray(newArray);
      //return the randomized array to the function
      return Randomised;
    };
    //Testing Newly Updated Security Code Generator | Developers Console
    const newCode12 = securityCodeGenerator12(10, 20, 30, 40, 50, 60);
    console.log(`Updated Security Code/Password x12 : ${newCode12}`);
    break;
  case "11":
    //x 11 charachters
    const securityCodeGenerator11 = function (n1, n2, n3, n4, n5, n6) {
      //Call Random Number Generator x 5
      const d1 = randomNumberGeneration(n1);
      const d2 = randomNumberGeneration(n2);
      const d3 = randomNumberGeneration(n3);
      const d4 = randomNumberGeneration(n4);
      const d5 = randomNumberGeneration(n5);
      const d6 = randomNumberGeneration(n6);
      //Call Random UPPER-lower-CASE Letter Generator !
      const L11 = randomUpperCaseLetterGenerator();
      const L22 = randomLowerCaseLetterGenerator();
      const L33 = randomUpperCaseLetterGenerator();
      //Call Random Special Charachter Function
      const charachter1 = randomizedSpecialCharachter();
      const charachter2 = randomizedSpecialCharachter();
      //Initiate new array / explicit (manual) type conversion for specific sequential output
      newArray = [
        String(d1) +
          String(d2) +
          String(L22) +
          String(d3) +
          String(L33) +
          String(d6) +
          String(charachter2) +
          String(d4) +
          String(charachter1) +
          String(d5) +
          String(L11),
      ];
      //Call randomArray function (randomize items in array) on the newly generated array !
      Randomised = randomArray(newArray);
      //return the randomized array to the function
      return Randomised;
    };
    //Testing Newly Updated Security Code Generator | Developers Console
    const newCode11 = securityCodeGenerator11(10, 20, 30, 40, 50, 60);
    console.log(`Updated Security Code/Password x11 : ${newCode11}`);
    break;
  case "10":
    //x 10 charachters
    const securityCodeGenerator10 = function (n1, n2, n3, n4, n5) {
      //Call Random Number Generator x 5
      const d1 = randomNumberGeneration(n1);
      const d2 = randomNumberGeneration(n2);
      const d3 = randomNumberGeneration(n3);
      const d4 = randomNumberGeneration(n4);
      const d5 = randomNumberGeneration(n5);
      //Call Random UPPER-lower-CASE Letter Generator !
      const L11 = randomUpperCaseLetterGenerator();
      const L22 = randomLowerCaseLetterGenerator();
      const L33 = randomUpperCaseLetterGenerator();
      //Call Random Special Charachter Function
      const charachter1 = randomizedSpecialCharachter();
      const charachter2 = randomizedSpecialCharachter();
      //Initiate new array / explicit (manual) type conversion for specific sequential output
      newArray = [
        String(d1) +
          String(d2) +
          String(L22) +
          String(d3) +
          String(L33) +
          String(charachter2) +
          String(d4) +
          String(charachter1) +
          String(d5) +
          String(L11),
      ];
      //Call randomArray function (randomize items in array) on the newly generated array !
      Randomised = randomArray(newArray);
      //return the randomized array to the function
      return Randomised;
    };
    //Testing Newly Updated Security Code Generator | Developers Console
    const newCode10 = securityCodeGenerator10(10, 20, 30, 40, 50);
    console.log(`Updated Security Code/Password x10 : ${newCode10}`);
    break;
  case "9":
    //x 9 charachters
    const securityCodeGenerator9 = function (n1, n2, n3, n4) {
      //Call Random Number Generator x 5
      const d1 = randomNumberGeneration(n1);
      const d2 = randomNumberGeneration(n2);
      const d3 = randomNumberGeneration(n3);
      const d4 = randomNumberGeneration(n4);
      //Call Random UPPER-lower-CASE Letter Generator !
      const L11 = randomUpperCaseLetterGenerator();
      const L22 = randomLowerCaseLetterGenerator();
      const L33 = randomUpperCaseLetterGenerator();
      //Call Random Special Charachter Function
      const charachter1 = randomizedSpecialCharachter();
      const charachter2 = randomizedSpecialCharachter();
      //Initiate new array / explicit (manual) type conversion for specific sequential output
      newArray = [
        String(d1) +
          String(d2) +
          String(L22) +
          String(d3) +
          String(L33) +
          String(charachter2) +
          String(d4) +
          String(charachter1) +
          String(L11),
      ];
      //Call randomArray function (randomize items in array) on the newly generated array !
      Randomised = randomArray(newArray);
      //return the randomized array to the function
      return Randomised;
    };
    //Testing Newly Updated Security Code Generator | Developers Console
    const newCode9 = securityCodeGenerator9(10, 20, 30, 40);
    console.log(`Updated Security Code/Password x9 : ${newCode9}`);
    break;
  case "8":
    //x 8 charachters
    const securityCodeGenerator8 = function (n1, n2, n3) {
      //Call Random Number Generator x 5
      const d1 = randomNumberGeneration(n1);
      const d2 = randomNumberGeneration(n2);
      const d3 = randomNumberGeneration(n3);
      //Call Random UPPER-lower-CASE Letter Generator !
      const L11 = randomUpperCaseLetterGenerator();
      const L22 = randomLowerCaseLetterGenerator();
      const L33 = randomUpperCaseLetterGenerator();
      //Call Random Special Charachter Function
      const charachter1 = randomizedSpecialCharachter();
      const charachter2 = randomizedSpecialCharachter();
      //Initiate new array / explicit (manual) type conversion for specific sequential output
      newArray = [
        String(d1) +
          String(d2) +
          String(L22) +
          String(d3) +
          String(L33) +
          String(charachter2) +
          String(charachter1) +
          String(L11),
      ];
      //Call randomArray function (randomize items in array) on the newly generated array !
      Randomised = randomArray(newArray);
      //return the randomized array to the function
      return Randomised;
    };
    //Testing Newly Updated Security Code Generator | Developers Console
    const newCode8 = securityCodeGenerator8(10, 20, 30);
    console.log(`Updated Security Code/Password x8 : ${newCode8}`);
    break;
}
